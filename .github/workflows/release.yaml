name: Create Release

on:
  push:
    branches:
        - master

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install

    - name: Build the plugin
      run: npm run build

    - name: Extract version from manifest.json
      id: get_version
      run: |
        version=$(jq -r '.version' manifest.json)
        echo "Version found: $version"
        echo "##[set-output name=version;]$version"

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/main.js
        asset_name: main.js
        asset_content_type: application/javascript

    - name: Upload manifest.json
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./manifest.json
        asset_name: manifest.json
        asset_content_type: application/json

    - name: Upload styles.css (optional)
      if: ${{ steps.check_file.outputs.exists == 'true' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./styles.css
        asset_name: styles.css
        asset_content_type: text/css
